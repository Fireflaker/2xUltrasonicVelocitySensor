#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
 
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels
 
// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
 
 
#define CommonSenseMetricSystem
 
#include <Ultrasonic.h>
 
Ultrasonic ultrasonic1(12, 13); // An ultrasonic sensor HC-04
Ultrasonic ultrasonic2(6, 7); // An ultrasonic sensor PING)))
 
long triggertime1;
long triggertime2;
 
void setup() {
  Serial.begin(500000);
  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3C for 128x32
    Serial.println(F("SSD1306 allocation failed"));
    for (;;); // Don't proceed, loop forever
  }
 
  // Show initial display buffer contents on the screen --
  // the library initializes this with an Adafruit splash screen.
  display.display();
  display.clearDisplay();
  display.setTextSize(2);
  display.setTextColor(WHITE);
}
 
void loop() {
  display.clearDisplay();
  int distance1 = ultrasonic1.read();
  int distance2 = ultrasonic2.read();
  //  Serial.print("Sensor 01: ");
  //  Serial.print(distance1); // Prints the distance on the default unit (centimeters)
  //  Serial.println("cm");
  //
  //  Serial.print("Sensor 02: ");
  //  Serial.print(distance2); // Prints the distance making the unit explicit
  //  Serial.println("cm");
  // does not work because can not print float
 
  if (distance1 < 100) {
    triggertime1 = millis();
  }
 
  else if (distance2 < 100) {
    triggertime2 = millis();
  }
 
  float speedoutput = (0.3 / ((triggertime1 - triggertime2) * 1000) * 10000000);
 
  display.setCursor(0, 0); //oled display
 
  display.print(distance1);
  display.print("-");
  display.print(distance2);
  display.setCursor(85, 0);
  // display.setTextSize(2);
  display.println("cm");
 
  display.setCursor(0, 15);
  display.print(speedoutput, DEC);
 
  display.display();
  //delay(0);
 
  Serial.print("distance1=");
  Serial.print(distance1, DEC);
 
  Serial.print(" ,distance2=");
  Serial.print(distance2, DEC);
 
  Serial.print(" ,T1=");
  Serial.print(triggertime1, DEC);
 
  Serial.print(" ,T2=");
  Serial.print(triggertime2, DEC);
 
  Serial.print(" ,speedoutput=");
  Serial.println(speedoutput, DEC);
 
  float newspeedoutput = speedoutput;
 
  if (speedoutput != newspeedoutput) {
    display.clearDisplay();
    display.setCursor(0, 0); //oled display
    display.print("V=");
    display.print(speedoutput);
    delay(500);
  }
 
}
